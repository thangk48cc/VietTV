#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VietTV
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
using System.IO;
using System.IO.IsolatedStorage;
using Microsoft.Phone.Data.Linq.Mapping;
using Microsoft.Phone.Data.Linq;


public class DebugWriter : TextWriter
{
    private const int DefaultBufferSize = 256;
    private System.Text.StringBuilder _buffer;

    public DebugWriter()
    {
        BufferSize = 256;
        _buffer = new System.Text.StringBuilder(BufferSize);
    }

    public int BufferSize
    {
        get;
        private set;
    }

    public override System.Text.Encoding Encoding
    {
        get { return System.Text.Encoding.UTF8; }
    }

    #region StreamWriter Overrides
    public override void Write(char value)
    {
        _buffer.Append(value);
        if (_buffer.Length >= BufferSize)
            Flush();
    }

    public override void WriteLine(string value)
    {
        Flush();

        using(var reader = new StringReader(value))
        {
            string line; 
            while( null != (line = reader.ReadLine()))
                System.Diagnostics.Debug.WriteLine(line);
        }
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
            Flush();
    }

    public override void Flush()
    {
        if (_buffer.Length > 0)
        {
            System.Diagnostics.Debug.WriteLine(_buffer);
            _buffer.Clear();
        }
    }
    #endregion
}


	public partial class DBFavoriteChanelContext : System.Data.Linq.DataContext
	{
		
		public bool CreateIfNotExists()
		{
			bool created = false;
			if (!this.DatabaseExists())
			{
				string[] names = this.GetType().Assembly.GetManifestResourceNames();
				string name = names.Where(n => n.EndsWith(FileName)).FirstOrDefault();
				if (name != null)
				{
					using (Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name))
					{
						if (resourceStream != null)
						{
							using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())
							{
								using (IsolatedStorageFileStream fileStream = new IsolatedStorageFileStream(FileName, FileMode.Create, myIsolatedStorage))
								{
									using (BinaryWriter writer = new BinaryWriter(fileStream))
									{
										long length = resourceStream.Length;
										byte[] buffer = new byte[32];
										int readCount = 0;
										using (BinaryReader reader = new BinaryReader(resourceStream))
										{
											// read file in chunks in order to reduce memory consumption and increase performance
											while (readCount < length)
											{
												int actual = reader.Read(buffer, 0, buffer.Length);
												readCount += actual;
												writer.Write(buffer, 0, actual);
											}
										}
									}
								}
							}
							created = true;
						}
						else
						{
							this.CreateDatabase();
							created = true;
						}
					}
				}
				else
				{
					this.CreateDatabase();
					created = true;
				}
			}
			return created;
		}
		
		public bool LogDebug
		{
			set
			{
				if (value)
				{
					this.Log = new DebugWriter();
				}
			}
		}
		
		public static string ConnectionString = "Data Source=isostore:/DBFavoriteChanel.sdf";

		public static string ConnectionStringReadOnly = "Data Source=appdata:/DBFavoriteChanel.sdf;File Mode=Read Only;";

		public static string FileName = "DBFavoriteChanel.sdf";

		public DBFavoriteChanelContext(string connectionString) : base(connectionString)
		{
			OnCreated();
		}
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFavoriteChanel(FavoriteChanel instance);
    partial void UpdateFavoriteChanel(FavoriteChanel instance);
    partial void DeleteFavoriteChanel(FavoriteChanel instance);
    #endregion
		
		public System.Data.Linq.Table<FavoriteChanel> FavoriteChanel
		{
			get
			{
				return this.GetTable<FavoriteChanel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class FavoriteChanel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ChanelId;
		
		private string _ChanelName;
		
		private string _Icon;
		
		private string _TypeChannel;
		
		private string _Link;
		
		private string _Link2;
		
		private string _Link3;
		
		private string _Link4;
		
		private System.Nullable<int> _IsLiked;
		
		private string _GroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChanelIdChanging(string value);
    partial void OnChanelIdChanged();
    partial void OnChanelNameChanging(string value);
    partial void OnChanelNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnTypeChannelChanging(string value);
    partial void OnTypeChannelChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnLink2Changing(string value);
    partial void OnLink2Changed();
    partial void OnLink3Changing(string value);
    partial void OnLink3Changed();
    partial void OnLink4Changing(string value);
    partial void OnLink4Changed();
    partial void OnIsLikedChanging(System.Nullable<int> value);
    partial void OnIsLikedChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public FavoriteChanel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chanelId", Storage="_ChanelId", DbType="NVarChar(100)")]
		public string ChanelId
		{
			get
			{
				return this._ChanelId;
			}
			set
			{
				if ((this._ChanelId != value))
				{
					this.OnChanelIdChanging(value);
					this.SendPropertyChanging();
					this._ChanelId = value;
					this.SendPropertyChanged("ChanelId");
					this.OnChanelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chanelName", Storage="_ChanelName", DbType="NVarChar(500)")]
		public string ChanelName
		{
			get
			{
				return this._ChanelName;
			}
			set
			{
				if ((this._ChanelName != value))
				{
					this.OnChanelNameChanging(value);
					this.SendPropertyChanging();
					this._ChanelName = value;
					this.SendPropertyChanged("ChanelName");
					this.OnChanelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="icon", Storage="_Icon", DbType="NVarChar(600)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="typeChannel", Storage="_TypeChannel", DbType="NVarChar(100)")]
		public string TypeChannel
		{
			get
			{
				return this._TypeChannel;
			}
			set
			{
				if ((this._TypeChannel != value))
				{
					this.OnTypeChannelChanging(value);
					this.SendPropertyChanging();
					this._TypeChannel = value;
					this.SendPropertyChanged("TypeChannel");
					this.OnTypeChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="link", Storage="_Link", DbType="NVarChar(2000)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="link2", Storage="_Link2", DbType="NVarChar(2000)")]
		public string Link2
		{
			get
			{
				return this._Link2;
			}
			set
			{
				if ((this._Link2 != value))
				{
					this.OnLink2Changing(value);
					this.SendPropertyChanging();
					this._Link2 = value;
					this.SendPropertyChanged("Link2");
					this.OnLink2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="link3", Storage="_Link3", DbType="NVarChar(2000)")]
		public string Link3
		{
			get
			{
				return this._Link3;
			}
			set
			{
				if ((this._Link3 != value))
				{
					this.OnLink3Changing(value);
					this.SendPropertyChanging();
					this._Link3 = value;
					this.SendPropertyChanged("Link3");
					this.OnLink3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="link4", Storage="_Link4", DbType="NVarChar(2000)")]
		public string Link4
		{
			get
			{
				return this._Link4;
			}
			set
			{
				if ((this._Link4 != value))
				{
					this.OnLink4Changing(value);
					this.SendPropertyChanging();
					this._Link4 = value;
					this.SendPropertyChanged("Link4");
					this.OnLink4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isLiked", Storage="_IsLiked", DbType="Int")]
		public System.Nullable<int> IsLiked
		{
			get
			{
				return this._IsLiked;
			}
			set
			{
				if ((this._IsLiked != value))
				{
					this.OnIsLikedChanging(value);
					this.SendPropertyChanging();
					this._IsLiked = value;
					this.SendPropertyChanged("IsLiked");
					this.OnIsLikedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="groupName", Storage="_GroupName", DbType="NVarChar(200)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
